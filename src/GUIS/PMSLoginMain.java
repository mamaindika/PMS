/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIS;

import controller.KPIGenerateController;
import controller.KPIRegisterController;
import controller.KPIUpdateController;
import controller.LoginController;
import controller.processController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.TableModel;
import jxl.write.WriteException;
import net.proteanit.sql.DbUtils;
import service.services;



/**
 *
 * @author boc
 */


public class PMSLoginMain extends javax.swing.JFrame {

    
    private Timer myTimer;
    public static final int ONE_SEC = 1000;
    
    public PMSLoginMain() {
        
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_HORIZ);
        setResizable(false);
        showTime();
        showDate();
        final JTextField processTF = (JTextField)processKPINAME.getEditor().getEditorComponent();
        processTF.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent ke) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        comboFilterProcess(processTF.getText().trim());
                    }
                });
            }
        });
        
        final JTextField generateTF = (JTextField)KPINAMEGenerate.getEditor().getEditorComponent();
        generateTF.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent ke) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        comboFilterGenerate(generateTF.getText().trim());
                    }
                });
            }
        });
       
    }
    
void showDate(){
    Date d = new Date();
    SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
    dateLabel.setText(f.format(d));
}
    
void showTime(){
       new Timer(0, (ActionEvent evt) -> {
           Date d = new Date();
           SimpleDateFormat f = new SimpleDateFormat("hh:mm:ss a");
           
           
           timeLable.setText(f.format(d));
       }).start();
    
    
 }

 




//Connection con = null;
PreparedStatement pst = null;



public Connection getConnection(){
    Connection connnection = null;
    try{
        String uname = userName.getText();
        char[] pass = passWord.getPassword();
        String pWord = new String(pass);
        services s = new services();
        System.out.println(uname+" "+pWord);
        connnection = s.makeConnectionAS400DB(uname,pWord);
        if(connnection != null){
            return connnection;
        }
    }catch(Exception e){}
    return null;
}

public Connection getConnectionBOCPRODDTA(String data){
    Connection connnection = null;
    try{
        String uname = userName.getText();
        char[] pass = passWord.getPassword();
        String pWord = new String(pass);
        services s = new services();
        System.out.println(uname+" "+pWord);
        connnection = s.makeConnectionAS400BOCPRODDTA(uname,pWord,data);
        if(connnection != null){
            return connnection;
        }
    }catch(Exception e){}
    return null;
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddiDescription1 = new javax.swing.JTextArea();
        uNameLabel3 = new javax.swing.JLabel();
        mdlPanel = new javax.swing.JPanel();
        PMSLogin = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        passWord = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        LoginErrorLabel = new javax.swing.JLabel();
        KPIList3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        PMSDashBoard = new javax.swing.JPanel();
        dashboard = new javax.swing.JPanel();
        kpibtn = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        uNameLabel = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        KPI = new javax.swing.JPanel();
        KPIPanel = new javax.swing.JPanel();
        kpilistbtn = new javax.swing.JButton();
        kpiRegisterbtn = new javax.swing.JButton();
        KPIList4 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        KPIBack = new javax.swing.JButton();
        KPIRegister = new javax.swing.JPanel();
        KPIRegisterPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        KPINumber = new javax.swing.JTextField();
        KPIName = new javax.swing.JTextField();
        KPIDescription = new javax.swing.JTextField();
        ResposiblePerson = new javax.swing.JTextField();
        Method = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        AddiDescription = new javax.swing.JTextPane();
        ErrorLabel = new javax.swing.JLabel();
        KPIList5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        KPIRegisterBack = new javax.swing.JButton();
        uNameLabel1 = new javax.swing.JLabel();
        KPIList = new javax.swing.JPanel();
        KPIListPanel = new javax.swing.JPanel();
        KPIList1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        KPIListBack = new javax.swing.JButton();
        uNameLabel2 = new javax.swing.JLabel();
        KPIList2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        KPListTabel = new javax.swing.JTable();
        KPIProcess = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Periods = new javax.swing.JComboBox<>();
        fdsfd = new javax.swing.JLabel();
        Data = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        Year = new javax.swing.JComboBox<>();
        KPIProcessError = new javax.swing.JLabel();
        KPIList6 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        processBackbtn = new javax.swing.JButton();
        uNameLabel6 = new javax.swing.JLabel();
        ProcessAlert = new javax.swing.JLabel();
        processKPINAME = new javax.swing.JComboBox<>();
        KPIDataGenerate = new javax.swing.JPanel();
        KPIProcess1 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        PeriodsGenerate = new javax.swing.JComboBox<>();
        fdsfd1 = new javax.swing.JLabel();
        DataGenerate = new javax.swing.JComboBox<>();
        StartGenerate = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        YearGenerate = new javax.swing.JComboBox<>();
        KPIStatErrorGenrate = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        processBackbtn1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        uNameLabel4 = new javax.swing.JLabel();
        KPINAMEGenerate = new javax.swing.JComboBox<>();
        KPIUPdate = new javax.swing.JPanel();
        panell = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        uNameLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        rowKpiName = new javax.swing.JTextPane();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        rowKpiStatus = new javax.swing.JComboBox<>();
        bottomPanel = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        logo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        timeLable = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();

        AddiDescription1.setColumns(20);
        AddiDescription1.setRows(5);
        AddiDescription1.setAutoscrolls(false);
        AddiDescription1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        uNameLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel3.setText("User Name");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        mdlPanel.setBackground(new java.awt.Color(204, 255, 255));
        mdlPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mdlPanel.setPreferredSize(new java.awt.Dimension(895, 614));
        mdlPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(245, 245, 245));
        loginPanel.setMinimumSize(new java.awt.Dimension(700, 600));
        loginPanel.setPreferredSize(new java.awt.Dimension(700, 305));

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));

        jLabel6.setBackground(new java.awt.Color(51, 204, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("USER NAME");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("PASSWORD");

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passWord, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(userName)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        LoginErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LoginErrorLabel.setForeground(new java.awt.Color(255, 51, 51));

        KPIList3.setBackground(new java.awt.Color(169, 169, 169));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("PMS LOGIN");

        javax.swing.GroupLayout KPIList3Layout = new javax.swing.GroupLayout(KPIList3);
        KPIList3.setLayout(KPIList3Layout);
        KPIList3Layout.setHorizontalGroup(
            KPIList3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(344, 344, 344))
        );
        KPIList3Layout.setVerticalGroup(
            KPIList3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(216, Short.MAX_VALUE))
            .addComponent(KPIList3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addComponent(KPIList3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(LoginErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );

        javax.swing.GroupLayout PMSLoginLayout = new javax.swing.GroupLayout(PMSLogin);
        PMSLogin.setLayout(PMSLoginLayout);
        PMSLoginLayout.setHorizontalGroup(
            PMSLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );
        PMSLoginLayout.setVerticalGroup(
            PMSLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );

        mdlPanel.add(PMSLogin, "card2");

        PMSDashBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dashboard.setBackground(new java.awt.Color(245, 245, 245));
        dashboard.setPreferredSize(new java.awt.Dimension(700, 600));

        kpibtn.setBackground(new java.awt.Color(255, 255, 153));
        kpibtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        kpibtn.setText("KPI LIST");
        kpibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kpibtnjButton1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 153));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton6.setText("KPI Data Process");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 255, 153));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton7.setText("KPI Data Generate");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(169, 169, 169));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        uNameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel.setText("User Name");

        jButton4.setBackground(new java.awt.Color(240, 245, 127));
        jButton4.setText("Log out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(uNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(uNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout dashboardLayout = new javax.swing.GroupLayout(dashboard);
        dashboard.setLayout(dashboardLayout);
        dashboardLayout.setHorizontalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardLayout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(kpibtn, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(269, 269, 269))
        );
        dashboardLayout.setVerticalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(kpibtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PMSDashBoardLayout = new javax.swing.GroupLayout(PMSDashBoard);
        PMSDashBoard.setLayout(PMSDashBoardLayout);
        PMSDashBoardLayout.setHorizontalGroup(
            PMSDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
        );
        PMSDashBoardLayout.setVerticalGroup(
            PMSDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );

        mdlPanel.add(PMSDashBoard, "card3");

        KPI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KPIPanel.setBackground(new java.awt.Color(245, 245, 245));

        kpilistbtn.setBackground(new java.awt.Color(255, 255, 153));
        kpilistbtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kpilistbtn.setText("KPI List");
        kpilistbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kpilistbtnjButton2ActionPerformed(evt);
            }
        });

        kpiRegisterbtn.setBackground(new java.awt.Color(255, 255, 153));
        kpiRegisterbtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kpiRegisterbtn.setText("KPI Register");
        kpiRegisterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kpiRegisterbtnjButton1ActionPerformed(evt);
            }
        });

        KPIList4.setBackground(new java.awt.Color(169, 169, 169));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("KPI");

        KPIBack.setBackground(new java.awt.Color(240, 245, 127));
        KPIBack.setText("Back");
        KPIBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KPIList4Layout = new javax.swing.GroupLayout(KPIList4);
        KPIList4.setLayout(KPIList4Layout);
        KPIList4Layout.setHorizontalGroup(
            KPIList4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(287, 287, 287)
                .addComponent(KPIBack)
                .addContainerGap())
        );
        KPIList4Layout.setVerticalGroup(
            KPIList4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(KPIList4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KPIBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPIPanelLayout = new javax.swing.GroupLayout(KPIPanel);
        KPIPanel.setLayout(KPIPanelLayout);
        KPIPanelLayout.setHorizontalGroup(
            KPIPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIPanelLayout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addGroup(KPIPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(kpilistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kpiRegisterbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(331, Short.MAX_VALUE))
            .addComponent(KPIList4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        KPIPanelLayout.setVerticalGroup(
            KPIPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIPanelLayout.createSequentialGroup()
                .addComponent(KPIList4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(kpiRegisterbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(kpilistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPILayout = new javax.swing.GroupLayout(KPI);
        KPI.setLayout(KPILayout);
        KPILayout.setHorizontalGroup(
            KPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 904, Short.MAX_VALUE)
            .addGroup(KPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        KPILayout.setVerticalGroup(
            KPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
            .addGroup(KPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mdlPanel.add(KPI, "card4");

        KPIRegister.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KPIRegisterPanel.setBackground(new java.awt.Color(245, 245, 245));
        KPIRegisterPanel.setForeground(new java.awt.Color(0, 102, 51));

        jLabel9.setBackground(new java.awt.Color(204, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("KPI Number");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("KPI Name");

        jLabel11.setBackground(new java.awt.Color(153, 255, 255));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("KPI Description");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Addtional Description");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Method");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Responsible Person");

        jButton2.setText("Cancel");

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        KPINumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        KPINumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPINumberActionPerformed(evt);
            }
        });

        KPIName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        KPIName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPINameActionPerformed(evt);
            }
        });

        KPIDescription.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        KPIDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIDescriptionActionPerformed(evt);
            }
        });

        ResposiblePerson.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ResposiblePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResposiblePersonActionPerformed(evt);
            }
        });

        Method.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "systm", "excel" }));
        Method.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MethodActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(AddiDescription);

        ErrorLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ErrorLabel.setForeground(new java.awt.Color(255, 51, 51));

        KPIList5.setBackground(new java.awt.Color(169, 169, 169));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("KPI REGISTRATION");

        KPIRegisterBack.setBackground(new java.awt.Color(240, 245, 127));
        KPIRegisterBack.setText("Back");
        KPIRegisterBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIRegisterBackActionPerformed(evt);
            }
        });

        uNameLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel1.setText("User Name");

        javax.swing.GroupLayout KPIList5Layout = new javax.swing.GroupLayout(KPIList5);
        KPIList5.setLayout(KPIList5Layout);
        KPIList5Layout.setHorizontalGroup(
            KPIList5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(uNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197)
                .addComponent(KPIRegisterBack)
                .addContainerGap())
        );
        KPIList5Layout.setVerticalGroup(
            KPIList5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIList5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KPIList5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(KPIList5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel28))
                    .addComponent(KPIRegisterBack, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPIRegisterPanelLayout = new javax.swing.GroupLayout(KPIRegisterPanel);
        KPIRegisterPanel.setLayout(KPIRegisterPanelLayout);
        KPIRegisterPanelLayout.setHorizontalGroup(
            KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                        .addComponent(ErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(156, 156, 156))
                    .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                        .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ResposiblePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIRegisterPanelLayout.createSequentialGroup()
                                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(KPIName, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                                        .addComponent(KPINumber, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                                        .addComponent(Method, 0, 334, Short.MAX_VALUE)
                                        .addComponent(KPIDescription)))
                                .addGap(156, 156, 156))))))
            .addComponent(KPIList5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        KPIRegisterPanelLayout.setVerticalGroup(
            KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                .addComponent(KPIList5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(KPINumber, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(KPIName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(KPIDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KPIRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(57, 57, 57)
                        .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Method, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(30, 30, 30)
                        .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ResposiblePerson))
                        .addGap(18, 18, 18)
                        .addGroup(KPIRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPIRegisterLayout = new javax.swing.GroupLayout(KPIRegister);
        KPIRegister.setLayout(KPIRegisterLayout);
        KPIRegisterLayout.setHorizontalGroup(
            KPIRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 904, Short.MAX_VALUE)
            .addGroup(KPIRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIRegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        KPIRegisterLayout.setVerticalGroup(
            KPIRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
            .addGroup(KPIRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIRegisterPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mdlPanel.add(KPIRegister, "card5");

        KPIList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KPIListPanel.setBackground(new java.awt.Color(211, 211, 211));

        KPIList1.setBackground(new java.awt.Color(169, 169, 169));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("KPI LIST");

        KPIListBack.setBackground(new java.awt.Color(240, 245, 127));
        KPIListBack.setText("Back");
        KPIListBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPIListBackActionPerformed(evt);
            }
        });

        uNameLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel2.setText("User Name");

        javax.swing.GroupLayout KPIList1Layout = new javax.swing.GroupLayout(KPIList1);
        KPIList1.setLayout(KPIList1Layout);
        KPIList1Layout.setHorizontalGroup(
            KPIList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(uNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(285, 285, 285)
                .addComponent(KPIListBack)
                .addContainerGap())
        );
        KPIList1Layout.setVerticalGroup(
            KPIList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KPIList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(KPIList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(KPIList1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(KPIListBack)))
                .addContainerGap())
        );

        KPIList2.setBackground(new java.awt.Color(245, 245, 245));

        KPListTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KPListTabel.setColumnSelectionAllowed(true);
        KPListTabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        KPListTabel.getTableHeader().setReorderingAllowed(false);
        KPListTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KPListTabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(KPListTabel);
        KPListTabel.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (KPListTabel.getColumnModel().getColumnCount() > 0) {
            KPListTabel.getColumnModel().getColumn(0).setMinWidth(150);
            KPListTabel.getColumnModel().getColumn(0).setMaxWidth(150);
            KPListTabel.getColumnModel().getColumn(2).setMinWidth(50);
            KPListTabel.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        javax.swing.GroupLayout KPIList2Layout = new javax.swing.GroupLayout(KPIList2);
        KPIList2.setLayout(KPIList2Layout);
        KPIList2Layout.setHorizontalGroup(
            KPIList2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        KPIList2Layout.setVerticalGroup(
            KPIList2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout KPIListPanelLayout = new javax.swing.GroupLayout(KPIListPanel);
        KPIListPanel.setLayout(KPIListPanelLayout);
        KPIListPanelLayout.setHorizontalGroup(
            KPIListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(KPIList1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(KPIList2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        KPIListPanelLayout.setVerticalGroup(
            KPIListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIListPanelLayout.createSequentialGroup()
                .addComponent(KPIList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KPIList2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout KPIListLayout = new javax.swing.GroupLayout(KPIList);
        KPIList.setLayout(KPIListLayout);
        KPIListLayout.setHorizontalGroup(
            KPIListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 904, Short.MAX_VALUE)
            .addGroup(KPIListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        KPIListLayout.setVerticalGroup(
            KPIListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
            .addGroup(KPIListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIListPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mdlPanel.add(KPIList, "card6");

        KPIProcess.setBackground(new java.awt.Color(248, 245, 245));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("KPI Name");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Periods");

        Periods.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Annual", "Bi-Annual", "Quarter" }));
        Periods.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Periods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PeriodsMouseClicked(evt);
            }
        });
        Periods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodsActionPerformed(evt);
            }
        });

        fdsfd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fdsfd.setText("Data");

        Data.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Actuals", "Budget" }));
        Data.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataMouseClicked(evt);
            }
        });
        Data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataActionPerformed(evt);
            }
        });

        jButton10.setText("Start Process");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Cancel");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Year");

        Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000" }));
        Year.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Year.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YearMouseClicked(evt);
            }
        });
        Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearActionPerformed(evt);
            }
        });

        KPIProcessError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        KPIProcessError.setForeground(new java.awt.Color(255, 51, 51));

        KPIList6.setBackground(new java.awt.Color(169, 169, 169));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("KPI PROCESS");

        processBackbtn.setBackground(new java.awt.Color(255, 255, 102));
        processBackbtn.setText("Back");
        processBackbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBackbtnActionPerformed(evt);
            }
        });

        uNameLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel6.setText("User Name");

        javax.swing.GroupLayout KPIList6Layout = new javax.swing.GroupLayout(KPIList6);
        KPIList6.setLayout(KPIList6Layout);
        KPIList6Layout.setHorizontalGroup(
            KPIList6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(uNameLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(processBackbtn)
                .addContainerGap())
        );
        KPIList6Layout.setVerticalGroup(
            KPIList6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIList6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KPIList6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KPIList6Layout.createSequentialGroup()
                        .addComponent(processBackbtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIList6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uNameLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel29)))
                .addContainerGap())
        );

        ProcessAlert.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ProcessAlert.setForeground(new java.awt.Color(255, 51, 51));

        processKPINAME.setEditable(true);

        javax.swing.GroupLayout KPIProcessLayout = new javax.swing.GroupLayout(KPIProcess);
        KPIProcess.setLayout(KPIProcessLayout);
        KPIProcessLayout.setHorizontalGroup(
            KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(KPIList6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KPIProcessLayout.createSequentialGroup()
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(KPIProcessLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, KPIProcessLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ProcessAlert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KPIProcessError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(KPIProcessLayout.createSequentialGroup()
                                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(fdsfd)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel19))
                                .addGap(114, 114, 114)
                                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Periods, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Data, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(processKPINAME, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(105, 105, 105))
        );
        KPIProcessLayout.setVerticalGroup(
            KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIProcessLayout.createSequentialGroup()
                .addComponent(KPIList6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(KPIProcessError, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(KPIProcessLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(processKPINAME, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(KPIProcessLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(Periods, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fdsfd)
                    .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(KPIProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addGap(32, 32, 32)
                .addComponent(ProcessAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        mdlPanel.add(KPIProcess, "card7");

        KPIProcess1.setBackground(new java.awt.Color(248, 245, 245));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("KPI Name");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("Periods");

        PeriodsGenerate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Annual", "Bi-Annual", "Quarter" }));
        PeriodsGenerate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PeriodsGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PeriodsGenerateMouseClicked(evt);
            }
        });
        PeriodsGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodsGenerateActionPerformed(evt);
            }
        });

        fdsfd1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fdsfd1.setText("Data");

        DataGenerate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Actuals", "Budget" }));
        DataGenerate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DataGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataGenerateMouseClicked(evt);
            }
        });
        DataGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataGenerateActionPerformed(evt);
            }
        });

        StartGenerate.setText("Start Generate");
        StartGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGenerateActionPerformed(evt);
            }
        });

        jButton14.setText("Cancel");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("Year");

        YearGenerate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000" }));
        YearGenerate.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        YearGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YearGenerateMouseClicked(evt);
            }
        });
        YearGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearGenerateActionPerformed(evt);
            }
        });

        KPIStatErrorGenrate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        KPIStatErrorGenrate.setForeground(new java.awt.Color(255, 51, 51));

        jPanel2.setBackground(new java.awt.Color(169, 169, 169));

        processBackbtn1.setBackground(new java.awt.Color(255, 255, 102));
        processBackbtn1.setText("Back");
        processBackbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBackbtn1ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("KPI GENERATE");

        uNameLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel4.setText("User Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(uNameLabel4)
                .addGap(113, 113, 113)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                .addComponent(processBackbtn1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uNameLabel4)
                        .addComponent(jLabel30))
                    .addComponent(processBackbtn1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        KPINAMEGenerate.setEditable(true);

        javax.swing.GroupLayout KPIProcess1Layout = new javax.swing.GroupLayout(KPIProcess1);
        KPIProcess1.setLayout(KPIProcess1Layout);
        KPIProcess1Layout.setHorizontalGroup(
            KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(KPIProcess1Layout.createSequentialGroup()
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KPIProcess1Layout.createSequentialGroup()
                        .addGap(607, 607, 607)
                        .addComponent(StartGenerate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton14))
                    .addGroup(KPIProcess1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KPIProcess1Layout.createSequentialGroup()
                                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(fdsfd1)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(165, 165, 165)
                                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PeriodsGenerate, 0, 447, Short.MAX_VALUE)
                                    .addComponent(YearGenerate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DataGenerate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(KPINAMEGenerate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(KPIStatErrorGenrate, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        KPIProcess1Layout.setVerticalGroup(
            KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KPIProcess1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(KPIStatErrorGenrate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(KPINAMEGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(YearGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(PeriodsGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fdsfd1)
                    .addComponent(DataGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(KPIProcess1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartGenerate)
                    .addComponent(jButton14))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPIDataGenerateLayout = new javax.swing.GroupLayout(KPIDataGenerate);
        KPIDataGenerate.setLayout(KPIDataGenerateLayout);
        KPIDataGenerateLayout.setHorizontalGroup(
            KPIDataGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 906, Short.MAX_VALUE)
            .addGroup(KPIDataGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIProcess1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        KPIDataGenerateLayout.setVerticalGroup(
            KPIDataGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
            .addGroup(KPIDataGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(KPIProcess1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mdlPanel.add(KPIDataGenerate, "card8");

        panell.setBackground(new java.awt.Color(245, 245, 245));
        panell.setForeground(new java.awt.Color(0, 102, 51));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel33.setText("KPI Name");

        jButton8.setText("Save");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(169, 169, 169));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("KPI USER DETAILS");

        jButton5.setBackground(new java.awt.Color(255, 255, 102));
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        uNameLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        uNameLabel5.setText("User Name");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(uNameLabel5)
                .addGap(111, 111, 111)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uNameLabel5)
                        .addComponent(jLabel36))
                    .addComponent(jButton5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        rowKpiName.setEditable(false);
        jScrollPane6.setViewportView(rowKpiName);

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel37.setText("Edit KPI Details");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel38.setText("Status");

        rowKpiStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Deactive" }));
        rowKpiStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        rowKpiStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowKpiStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panellLayout = new javax.swing.GroupLayout(panell);
        panell.setLayout(panellLayout);
        panellLayout.setHorizontalGroup(
            panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panellLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panellLayout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panellLayout.createSequentialGroup()
                        .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panellLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panellLayout.createSequentialGroup()
                                .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rowKpiStatus, 0, 450, Short.MAX_VALUE)
                                    .addComponent(jScrollPane6))))
                        .addGap(111, 111, 111))))
        );
        panellLayout.setVerticalGroup(
            panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panellLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowKpiStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout KPIUPdateLayout = new javax.swing.GroupLayout(KPIUPdate);
        KPIUPdate.setLayout(KPIUPdateLayout);
        KPIUPdateLayout.setHorizontalGroup(
            KPIUPdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panell, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        KPIUPdateLayout.setVerticalGroup(
            KPIUPdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panell, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mdlPanel.add(KPIUPdate, "card9");

        getContentPane().add(mdlPanel, java.awt.BorderLayout.CENTER);

        bottomPanel.setBackground(new java.awt.Color(204, 204, 255));
        bottomPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel9.setBackground(new java.awt.Color(255, 255, 153));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Designed By: IT Department ,Bank Of Ceylon");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(294, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(bottomPanel, java.awt.BorderLayout.PAGE_END);

        topPanel.setBackground(new java.awt.Color(255, 255, 153));
        topPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        logo.setBackground(new java.awt.Color(255, 255, 153));

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Bank of Ceylon");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Human Resource Operations Department");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Performance Management System");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/boc.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        timeLable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timeLable.setText("12:44:12");

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateLabel.setText("2014-12-30");

        javax.swing.GroupLayout logoLayout = new javax.swing.GroupLayout(logo);
        logo.setLayout(logoLayout);
        logoLayout.setHorizontalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logoLayout.createSequentialGroup()
                        .addGroup(logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addGroup(logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeLable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(logoLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        logoLayout.setVerticalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(logoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(dateLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timeLable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed

    }//GEN-LAST:event_userNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            String uname = userName.getText();
            char[] pass = passWord.getPassword();
            String pWord = new String(pass);
            LoginController lc = new LoginController();
        try {
            if( lc.validateUser(uname,pWord)){
                System.out.println("User log well");
                mdlPanel.removeAll();
                mdlPanel.add(PMSDashBoard);
                mdlPanel.repaint();
                mdlPanel.revalidate();
                uNameLabel.setText(uname);
                LoginErrorLabel.setText("");
                
                
            }
            else{
                
                mdlPanel.removeAll();
                mdlPanel.add(PMSLogin);
                mdlPanel.repaint();
                mdlPanel.revalidate();
                userName.setText("");
                passWord.setText("");
                LoginErrorLabel.setText("Worning! User Name Or Password is wrong");
                errorLabel.setText("User Name or PassWord is wrong");
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void kpibtnjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kpibtnjButton1ActionPerformed
            String userN = userName.getText();
            char[] passW = passWord.getPassword();
            String pWord = new String(passW);
            uNameLabel2.setText(userN);
            try {
                ShowList();
            } catch (SQLException ex) {
                Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }
            mdlPanel.removeAll();
            mdlPanel.add(KPIList);
            mdlPanel.repaint();
            mdlPanel.revalidate();
    }//GEN-LAST:event_kpibtnjButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       //System.exit(0);
       mdlPanel.removeAll();
       mdlPanel.add(PMSLogin);
       mdlPanel.repaint();
       mdlPanel.revalidate();
       userName.setText("");
       passWord.setText("");
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void kpilistbtnjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kpilistbtnjButton2ActionPerformed
            String userN = userName.getText();
            char[] passW = passWord.getPassword();
            String pWord = new String(passW);
            try {
                ShowList();
            } catch (SQLException ex) {
                Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }
            mdlPanel.removeAll();
            mdlPanel.add(KPIList);
            mdlPanel.repaint();
            mdlPanel.revalidate();
    }//GEN-LAST:event_kpilistbtnjButton2ActionPerformed
public void ShowList() throws SQLException, IOException{
    Connection conn= null;
    PreparedStatement pst = null;

    services s = new services();

    conn = getConnection();
    if(conn != null){
       
        UpdateTable(conn);
    }
}

private void UpdateTable(Connection con3) throws SQLException{
    try{
        String sql = "select KPINAME,KPISTAT,KPINUMB from PMSKPI01  ORDER BY KPINAME ASC";
        //KPINUMB,KPINAME,KPISTAT
        pst =con3.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
         //System.out.println("data camess");
         
        KPListTabel.setModel(DbUtils.resultSetToTableModel(rs));
        KPListTabel.getColumnModel().getColumn(0).setPreferredWidth(700);
        KPListTabel.getColumnModel().getColumn(1).setPreferredWidth(80);
        KPListTabel.getColumnModel().getColumn(2).setPreferredWidth(100);
        KPListTabel.getColumnModel().getColumn(0).setHeaderValue("KPI NAME");
        KPListTabel.getColumnModel().getColumn(1).setHeaderValue("STATUS");
        KPListTabel.getColumnModel().getColumn(2).setHeaderValue("KPI NUMBER");
    }
    catch(Exception e){
    }
    finally{
        con3.close();
    }
}
    
    private void kpiRegisterbtnjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kpiRegisterbtnjButton1ActionPerformed
            
            
            mdlPanel.removeAll();
            mdlPanel.add(KPIRegister);
            mdlPanel.repaint();
            mdlPanel.revalidate();
    }//GEN-LAST:event_kpiRegisterbtnjButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            String kpiNumber = KPINumber.getText();
            String kpiName = KPIName.getText();
            String kpiDescription = KPIDescription.getText();
            String addiDescription = AddiDescription.getText();
            String method = (String) Method.getSelectedItem();
            String responsiblePerson = ResposiblePerson.getText();
            String userN = userName.getText();
            char[] passW = passWord.getPassword();
            String pWord = new String(passW);
                if(kpiNumber.equals("")){
                    ErrorLabel.setText("Please enter KPI Number");
                }
                else if(kpiName.equals("")){
                    ErrorLabel.setText("Please enter KPI Name");
                }
                else if(kpiDescription.equals("")){
                    ErrorLabel.setText("Please enter Description");
                }
                else if(addiDescription.equals("")){
                    ErrorLabel.setText("Please Additional Description");
                }
                else if(method.equals("")){
                    ErrorLabel.setText("Please select Method");
                }
                else if(responsiblePerson.equals("")){
                    ErrorLabel.setText("Please enter Responsible Person");
                }
                else{ 
                    KPIRegisterController kpirc = new KPIRegisterController();
                    try {
                        kpirc.KPIRegister(kpiNumber,kpiName,kpiDescription,addiDescription,method,responsiblePerson,userN,pWord);
                        KPINumber.setText("");
                        KPIName.setText("");
                        KPIDescription.setText("");
                        AddiDescription.setText("");
                        ResposiblePerson.setText("");
                        ErrorLabel.setText("");
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                    Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                }           
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void KPINumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPINumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KPINumberActionPerformed

    private void KPINameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPINameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KPINameActionPerformed

    private void KPIDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KPIDescriptionActionPerformed

    private void ResposiblePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResposiblePersonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResposiblePersonActionPerformed

    private void MethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MethodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MethodActionPerformed

    private void KPIBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIBackActionPerformed
            mdlPanel.removeAll();
            mdlPanel.add(PMSDashBoard);
            mdlPanel.repaint();
            mdlPanel.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_KPIBackActionPerformed

    private void KPIListBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIListBackActionPerformed
            mdlPanel.removeAll();
            mdlPanel.add(PMSDashBoard);
            mdlPanel.repaint();
            mdlPanel.revalidate();// TODO add your handling code here:
    }//GEN-LAST:event_KPIListBackActionPerformed

    private void KPIRegisterBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPIRegisterBackActionPerformed
            mdlPanel.removeAll();
            mdlPanel.add(KPI);
            mdlPanel.repaint();
            mdlPanel.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_KPIRegisterBackActionPerformed

    private void KPListTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KPListTabelMouseClicked
        
        
        int row = KPListTabel.getSelectedRow();
        TableModel tm = KPListTabel.getModel();
        
        String kpiName = tm.getValueAt(row,0).toString().trim();
        
        String userN = userName.getText();
        char[] passW = passWord.getPassword();
        String pWord = new String(passW);
        
        mdlPanel.removeAll();
        mdlPanel.add(KPIUPdate);
        mdlPanel.repaint();
        mdlPanel.revalidate();
        uNameLabel5.setText(userName.getText());
        
        Connection conne = getConnection();
        
        try{
            String sql = "select * from PMSKPI01 WHERE KPINAME = '"+kpiName+"'";

            pst =conne.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
              
            while(rs.next()){
                System.out.println(rs.getString(1)+" "+rs.getString(2)+" "+rs.getString(3)+" "+rs.getString(4)+" ");
                //rowKpiNumber.setText(rs.getString(1));
                rowKpiName.setText(rs.getString(2).trim());
                //rowKpiRespnPersn.setText(rs.getString(3).trim());
                String kpimethod = rs.getString(4);
                String kpiStat = rs.getString(5).trim();
                
                System.out.println(kpiStat);
                
               /* if(kpimethod.equals("systm")){
                    rowKpiMethod.setSelectedItem("System Generate");
                }
                else if(kpimethod.equals("excel")){
                    rowKpiMethod.setSelectedItem("Excel Sheet");
                }*/
                
                if(kpiStat.equals("A")){
                    rowKpiStatus.setSelectedItem("Active");
                }
                else if(kpiStat.equals("D")){
                    rowKpiStatus.setSelectedItem("Deactive");
                }
                
                
            }

        
        }
        catch(Exception e){
            
            System.out.println(e);
        }
        finally{
            try {
                conne.close();
            } catch (SQLException ex) {
                Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                        
        
        
        try {
            //rc.setRowValues(userN,pWord,kpiNo);
        } catch (Exception ex) {
           
        }
    }//GEN-LAST:event_KPListTabelMouseClicked

    private void UpdateTableAll(Connection con3) throws SQLException{
    
}
    
    
    
    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
            
            mdlPanel.removeAll();
            mdlPanel.add(KPIProcess);
            mdlPanel.repaint();
            mdlPanel.revalidate();
            uNameLabel6.setText(userName.getText());
            File dir = new File("C:\\PMSDATA");
                if(!dir.exists()){
                    try{
                        dir.mkdir();
                    }
                    catch(Exception ddr){
                        System.out.println("lklklk"+ddr);
                    }
                }
            
             
    }//GEN-LAST:event_jButton6ActionPerformed
    
    public boolean checkKPIStat(Connection conPMSLIB,String kpiNumber,String year,String data,String period  ) throws SQLException{
        System.out.println("ddgddg"+kpiNumber);
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        
        if(data.equals("Actuals")){
                data ="ACT";
            }
            else if(data.equals("Budget")){
                data ="BUD";
        }
        if(period.equals("Annual")){
            period = "AN";
        }
        else if(period.equals("Bi-Annual")){
            period = "BI";
        }
        else if(period.equals("Quarter")){
            period = "QU";
        }
        try{
            pstmt = conPMSLIB.prepareStatement("select * from pmsgen01 where( GENKPIN = '"+kpiNumber+"'AND GENYEAR ='"+year+"'AND GENTYPE ='"+data+"'AND GENPERD ='"+period+"')");
            
           // pstmt.setString(4,period);
            rs = pstmt.executeQuery(); 
            while (rs.next()) {  
                
                System.out.println(rs.getString(5));            
                if(rs.getString(5).trim().equals("1")){
                    KPIProcessError.setText("This KPI  is already processed");
                   
                    return true;
                }
                else if(rs.getString(5).trim().equals("5")){
                    KPIProcessError.setText("This KPI  is already processed to Excel Sheet");
                    return true;
                }
             }
        }
        catch(Exception ek){
            System.out.println("ek "+ek);
        }
        finally{
            conPMSLIB.close();
        }
        return false;
    }
       
    public boolean checkKPIStatGen(Connection conPMSLIB,String kpiNumber,String year,String data,String period  ) throws SQLException{
        
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        
        if(data.equals("Actuals")){
                data ="ACT";
            }
            else if(data.equals("Budget")){
                data ="BUD";
        }
        if(period.equals("Annual")){
                period = "AN";
            }
            else if(period.equals("Bi-Annual")){
                period = "BI";
            }
            else if(period.equals("Quarter")){
                period = "QU";
            }
        try{
            pstmt = conPMSLIB.prepareStatement("select * from pmsgen01 where( GENKPIN = '"+kpiNumber+"'AND GENYEAR ='"+year+"'AND GENTYPE ='"+data+"'AND GENPERD ='"+period+"')");
            
           // pstmt.setString(4,period);
            rs = pstmt.executeQuery();
            if(!rs.next()){
                KPIStatErrorGenrate.setText("This KPI  has not been Processed yet");
            }
            else{
               do{
                   if(rs.getString(5).trim().equals("1")){

                        return true;
                    }
                    else if(rs.getString(5).trim().equals("5")){
                        KPIStatErrorGenrate.setText("This KPI  has been already Generated to Excel Sheet");
                        return false;
                    }
                    else if(rs.getString(5).trim().equals("")){
                        KPIStatErrorGenrate.setText("This KPI  has not been Processed yet");
                        return false;
                    }
               }
               while (rs.next());
           
            }
         }
        catch(Exception ek){
         System.out.println("ek1 "+ek);
        }
        finally{
            conPMSLIB.close();
        }
        return false;
    }
    
    public boolean checkKPIStatGenAll(Connection conPMSLIB,String year,String data,String period  ) throws SQLException{
        
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        
        if(data.equals("Actuals")){
                data ="ACT";
            }
            else if(data.equals("Budget")){
                data ="BUD";
        }
        if(period.equals("Annual")){
                period = "AN";
            }
            else if(period.equals("Bi-Annual")){
                period = "BI";
            }
            else if(period.equals("Quarter")){
                period = "QU";
            }
        try{
            pstmt = conPMSLIB.prepareStatement("select * from pmsgen01 where(GENSTAT='1' AND GENYEAR ='"+year+"'AND GENTYPE ='"+data+"'AND GENPERD ='"+period+"')");
            rs = pstmt.executeQuery();
            if(!rs.next()){
                KPIStatErrorGenrate.setText("There is no Query result");
                return false;
            }
            else{
                return true;
            }
        }
        catch(Exception ek){
         System.out.println("ek "+ek);
        }
        finally{
            conPMSLIB.close();
        }
        return false;
    }
    
    
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        mdlPanel.removeAll();
        mdlPanel.add(KPIDataGenerate);
        mdlPanel.repaint();
        mdlPanel.revalidate();
        uNameLabel4.setText(userName.getText());
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //String kpiNumber = rowKpiNumber.getText();
        String kpiName = rowKpiName.getText();
        //String method = (String) rowKpiMethod.getSelectedItem();
        String kpistatus = rowKpiStatus.getSelectedItem().toString().trim();
        /*if(method.equals("System Generate")){
            method = "systm";
        }
        else if(method.equals("Excel Sheet")){
            method = "excel";
        }*/
        
        if(kpistatus.equals("Active")){
            kpistatus="A";
        }
        else if(kpistatus.equals("Deactive")){
            kpistatus="D";
        }
        
        //String responsiblePerson = rowKpiRespnPersn.getText();
        
        Connection conu = getConnection();

        //System.out.println(unpw+" un "+un+"pw"+pw);

        KPIUpdateController kpirc = new KPIUpdateController();
        try {
            kpirc.KPIUpdate(kpiName,kpistatus, conu);
            //this.dispose();

        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String userN = userName.getText();
        char[] passW = passWord.getPassword();
        String pWord = new String(passW);
        uNameLabel2.setText(userN);
        try {
            ShowList();
        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        mdlPanel.removeAll();
        mdlPanel.add(KPIList);
        mdlPanel.repaint();
        mdlPanel.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        
            String uname = userName.getText();
            char[] pass = passWord.getPassword();
            String pWord = new String(pass);
            LoginController lc = new LoginController();
        try {
            if(lc.validateUser(uname,pWord)){
                System.out.println("User log well");
                mdlPanel.removeAll();
                mdlPanel.add(PMSDashBoard);
                mdlPanel.repaint();
                mdlPanel.revalidate();
                uNameLabel.setText(uname);
                LoginErrorLabel.setText("");
                
            }
            else{
                
                mdlPanel.removeAll();
                mdlPanel.add(PMSLogin);
                mdlPanel.repaint();
                mdlPanel.revalidate();
                userName.setText("");
                passWord.setText("");
                LoginErrorLabel.setText("Worning! User Name Or Password is wrong");
                errorLabel.setText("User Name or PassWord is wrong");
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (IOException ex) {
                Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void rowKpiStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowKpiStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rowKpiStatusActionPerformed

    private void processBackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBackbtnActionPerformed
        processKPINAME.setSelectedItem("");
        //processKPIMethod.setText("");
       // KPINumberProcess.setText("");
        KPIProcessError.setText("");
        ProcessAlert.setText("");
        mdlPanel.removeAll();
        mdlPanel.add(PMSDashBoard);
        mdlPanel.repaint();
        mdlPanel.revalidate();
    }//GEN-LAST:event_processBackbtnActionPerformed

    private void YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearActionPerformed

    private void YearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YearMouseClicked
        KPIProcessError.setText("");
        ProcessAlert.setText("");
    }//GEN-LAST:event_YearMouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        processKPINAME.setSelectedItem("");
        //processKPIMethod.setText("");
        //KPINumberProcess.setText("");
        ProcessAlert.setText("");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        ProcessAlert.setText("");
        ProcessAlert.setVisible(true);
        try {

            String period = (String) Periods.getSelectedItem();
            String data = (String) Data.getSelectedItem();
            String kpiName = processKPINAME.getSelectedItem().toString().trim();
            Connection cn = getConnection();
            
            String kpiNumber = getKPINumber(cn,kpiName).trim();
            
           
            String year = (String) Year.getSelectedItem();
            String uName = userName.getText();
            if(kpiName.equals("")){
                KPIProcessError.setText("Please Enter KPI Name");
            }
            else{

                Connection conPMSLIB = getConnection();
                boolean stat = checkKPIStat(conPMSLIB,kpiNumber,year,data,period);
                if(stat == false){

                    KPIProcessError.setText("");
                    ProcessAlert.setVisible(true);
                    try {
                        processController pc = new processController();
                        Connection conPMSLIB1 = getConnection();
                        Connection conBOCPRODDTA = getConnectionBOCPRODDTA(data);
                        boolean rst =  pc.KPIDataProcess(conPMSLIB1,conBOCPRODDTA,data,kpiNumber,uName,year,period);
                        if(rst==true){

                        }

                    } catch (SQLException ex) {

                    } catch (IOException ex) {
                        Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }else{}

            }
        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void DataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataActionPerformed

    private void DataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataMouseClicked
        KPIProcessError.setText("");
        ProcessAlert.setText("");
    }//GEN-LAST:event_DataMouseClicked

    private void PeriodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodsActionPerformed

    private void PeriodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PeriodsMouseClicked
        KPIProcessError.setText("");
        ProcessAlert.setText("");
    }//GEN-LAST:event_PeriodsMouseClicked

    private void processBackbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBackbtn1ActionPerformed
        KPINAMEGenerate.setSelectedItem("");

        KPIStatErrorGenrate.setText("");
        KPIStatErrorGenrate.setText("");
        mdlPanel.removeAll();
        mdlPanel.add(PMSDashBoard);
        mdlPanel.repaint();
        mdlPanel.revalidate();
    }//GEN-LAST:event_processBackbtn1ActionPerformed

    private void YearGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearGenerateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearGenerateActionPerformed

    private void YearGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YearGenerateMouseClicked
        KPIStatErrorGenrate.setText("");
    }//GEN-LAST:event_YearGenerateMouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        KPINAMEGenerate.setSelectedItem("");

    }//GEN-LAST:event_jButton14ActionPerformed

    private void StartGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGenerateActionPerformed
        try {
            KPIStatErrorGenrate.setText("");
            String period = (String) PeriodsGenerate.getSelectedItem();
            String data = (String) DataGenerate.getSelectedItem();
            Connection cn = getConnection();
            String kpiName = (String) KPINAMEGenerate.getSelectedItem();
            String kpiNumber = getKPINumber(cn,kpiName).trim();
            /*String kpiMethod = processKPIMethod.getText();
            if(kpiMethod.equals("System Generate")){
                kpiMethod = "systm";
            }
            else if(kpiMethod.equals("Excel Sheet")){
                kpiMethod = "excel";
            }*/
            String year = (String) YearGenerate.getSelectedItem();
            Connection conPMSLIB = getConnection();
            KPIGenerateController  gc = new KPIGenerateController();
            if(kpiNumber.trim().equals("all")){

                boolean stat1 = checkKPIStatGenAll(conPMSLIB,year,data,period);
                if(stat1 == true){
                    Connection conPMSLIB2 = getConnection();
                    gc.KPIGenerateAll(conPMSLIB2,year,data,period);
                    System.out.println("generateAll");
                }else{
                    System.out.println("not generateAll");
                }
            }
            else{
                boolean stat = checkKPIStatGen(conPMSLIB,kpiNumber,year,data,period);

                if(stat == true){
                    Connection conPMSLIB1 = getConnection();
                    gc.KPIGenerate(conPMSLIB1,kpiNumber,year,data,period);
                    System.out.println("generate");
                }else{
                    System.out.println("not generate");
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (WriteException ex) {
            Logger.getLogger(PMSLoginMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StartGenerateActionPerformed

    private void DataGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataGenerateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataGenerateActionPerformed

    private void DataGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataGenerateMouseClicked
        KPIStatErrorGenrate.setText("");
    }//GEN-LAST:event_DataGenerateMouseClicked

    private void PeriodsGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodsGenerateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodsGenerateActionPerformed

    private void PeriodsGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PeriodsGenerateMouseClicked
        KPIStatErrorGenrate.setText("");
    }//GEN-LAST:event_PeriodsGenerateMouseClicked
    
        
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PMSLoginMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PMSLoginMain().setVisible(true);
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextPane AddiDescription;
    private javax.swing.JTextArea AddiDescription1;
    public javax.swing.JComboBox<String> Data;
    public javax.swing.JComboBox<String> DataGenerate;
    public javax.swing.JLabel ErrorLabel;
    private javax.swing.JPanel KPI;
    private javax.swing.JButton KPIBack;
    private javax.swing.JPanel KPIDataGenerate;
    private javax.swing.JTextField KPIDescription;
    private javax.swing.JPanel KPIList;
    private javax.swing.JPanel KPIList1;
    private javax.swing.JPanel KPIList2;
    private javax.swing.JPanel KPIList3;
    private javax.swing.JPanel KPIList4;
    private javax.swing.JPanel KPIList5;
    private javax.swing.JPanel KPIList6;
    private javax.swing.JButton KPIListBack;
    private javax.swing.JPanel KPIListPanel;
    private javax.swing.JComboBox<String> KPINAMEGenerate;
    private javax.swing.JTextField KPIName;
    private javax.swing.JTextField KPINumber;
    private javax.swing.JPanel KPIPanel;
    private javax.swing.JPanel KPIProcess;
    private javax.swing.JPanel KPIProcess1;
    public javax.swing.JLabel KPIProcessError;
    private javax.swing.JPanel KPIRegister;
    private javax.swing.JButton KPIRegisterBack;
    private javax.swing.JPanel KPIRegisterPanel;
    public javax.swing.JLabel KPIStatErrorGenrate;
    private javax.swing.JPanel KPIUPdate;
    private javax.swing.JTable KPListTabel;
    private javax.swing.JLabel LoginErrorLabel;
    private javax.swing.JComboBox<String> Method;
    private javax.swing.JPanel PMSDashBoard;
    private javax.swing.JPanel PMSLogin;
    public javax.swing.JComboBox<String> Periods;
    public javax.swing.JComboBox<String> PeriodsGenerate;
    public javax.swing.JLabel ProcessAlert;
    private javax.swing.JTextField ResposiblePerson;
    private javax.swing.JButton StartGenerate;
    public javax.swing.JComboBox<String> Year;
    public javax.swing.JComboBox<String> YearGenerate;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel dashboard;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel fdsfd;
    private javax.swing.JLabel fdsfd1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton kpiRegisterbtn;
    private javax.swing.JButton kpibtn;
    private javax.swing.JButton kpilistbtn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel logo;
    private javax.swing.JPanel mdlPanel;
    private javax.swing.JPanel panell;
    private javax.swing.JPasswordField passWord;
    private javax.swing.JButton processBackbtn;
    private javax.swing.JButton processBackbtn1;
    private javax.swing.JComboBox<String> processKPINAME;
    public javax.swing.JTextPane rowKpiName;
    public javax.swing.JComboBox<String> rowKpiStatus;
    private javax.swing.JLabel timeLable;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel uNameLabel;
    private javax.swing.JLabel uNameLabel1;
    private javax.swing.JLabel uNameLabel2;
    private javax.swing.JLabel uNameLabel3;
    private javax.swing.JLabel uNameLabel4;
    private javax.swing.JLabel uNameLabel5;
    private javax.swing.JLabel uNameLabel6;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables

    private String getKPINumber(Connection cn,String kpiName) throws SQLException {
        
    try{
        String sql = "select KPINUMB from PMSKPI01  WHERE KPINAME = '"+kpiName+"'";
        //KPINUMB,KPINAME,KPISTAT
        pst =cn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
        if(rs.next()){
            return rs.getString(1);
        
        }
        
       
    }
    catch(Exception e){
    }
    finally{
        cn.close();
    }
     
        return null;
    }
    
    public void comboFilterProcess(String kpiName) {
            List<String> filterArray= new ArrayList<String>();

            String str1="";
            Connection cn = getConnection();
            kpiName = kpiName.toLowerCase();
            try
            {


            String sql= "select KPINAME from PMSKPI01  WHERE LOWER(KPINAME) LIKE '%"+kpiName+"%' AND KPISTAT = 'A' ";
             pst =cn.prepareStatement(sql);
             ResultSet rs = pst.executeQuery();
                 while(rs.next())
                 {
                  str1=rs.getString(1).trim();
                  filterArray.add(str1);
                 }

            }
            catch(Exception ex)
            {
             System.out.println("error"+ex);   
            }
            
            if (filterArray.size() > 0) {
                 processKPINAME.setModel(new DefaultComboBoxModel(filterArray.toArray()));
                 processKPINAME.setSelectedItem(kpiName);
                 processKPINAME.showPopup();
             }
             else {
                 processKPINAME.hidePopup();
             }
    }
    
    
    public void comboFilterGenerate(String kpiName) {
            List<String> filterArray= new ArrayList<String>();

            String str1="";
            Connection cn = getConnection();
            kpiName = kpiName.toLowerCase();
            try
            {


            String sql= "select KPINAME from PMSKPI01  WHERE LOWER(KPINAME) LIKE '%"+kpiName+"%' AND KPISTAT = 'A' ";
             pst =cn.prepareStatement(sql);
             ResultSet rs = pst.executeQuery();
                 while(rs.next())
                 {
                  str1=rs.getString(1).trim();
                  filterArray.add(str1);
                 }

            }
            catch(Exception ex)
            {
             System.out.println("error"+ex);   
            }
            
            if (filterArray.size() > 0) {
                 KPINAMEGenerate.setModel(new DefaultComboBoxModel(filterArray.toArray()));
                 KPINAMEGenerate.setSelectedItem(kpiName);
                 KPINAMEGenerate.showPopup();
             }
             else {
                 KPINAMEGenerate.hidePopup();
             }
    }


    
    
}

